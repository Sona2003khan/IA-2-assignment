public class Levenshtein {

    public static int public class Levenshtein {

    public static int levenshteinDistance(String s1, String s2) {
        int m = s1.length(), n = s2.length();
        int[][] dp = new int[m+1][n+1];

        for (int i = 0; i <= m; i++) dp[i][0] = i;
        for (int j = 0; j <= n; j++) dp[0][j] = j;

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s1.charAt(i-1) == s2.charAt(j-1))
                    dp[i][j] = dp[i-1][j-1];
                else {
                    dp[i][j] = 1 + Math.min(
                        dp[i-1][j-1],  // substitution
                        Math.min(
                            dp[i-1][j],  // deletion
                            dp[i][j-1]   // insertion
                        )
                    );
                }
            }
        }
        return dp[m][n];
    }

    public static void main(String[] args) {
        String a = "kitten";
        String b = "sitting";
        System.out.println("Levenshtein distance: " + levenshteinDistance(a, b));
    }
}
(String s1, String s2) {
        int m = s1.length(), n = s2.length();
        int[][] dp = new int[m+1][n+1];

        for (int i = 0; i <= m; i++) dp[i][0] = i;
        for (int j = 0; j <= n; j++) dp[0][j] = j;

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (s1.charAt(i-1) == s2.charAt(j-1))
                    dp[i][j] = dp[i-1][j-1];
                else {
                    dp[i][j] = 1 + Math.min(
                        dp[i-1][j-1],  // substitution
                        Math.min(
                            dp[i-1][j],  // deletion
                            dp[i][j-1]   // insertion
                        )
                    );
                }
            }
        }
        return dp[m][n];
    }

    public static void main(String[] args) {
        String a = "kitten";
        String b = "sitting";
        System.out.println("Levenshtein distance: " + levenshteinDistance(a, b));
    }
}
